"""update trigger

Revision ID: d88e8d6792e7
Revises: 843d7f436fd0
Create Date: 2025-06-18 13:04:27.945621

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd88e8d6792e7'
down_revision = '843d7f436fd0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("""
               CREATE
               OR REPLACE FUNCTION world.notify_shape_update()
        RETURNS TRIGGER AS $$
               BEGIN
          PERFORM
               pg_notify('shape_channel', row_to_json(NEW)::text);
               RETURN NEW;
               END;
        $$
               LANGUAGE plpgsql;
               """)

    op.execute("""
        DROP TRIGGER IF EXISTS shape_update_trigger ON world.shape;
        CREATE TRIGGER shape_update_trigger
        AFTER INSERT OR UPDATE ON world.shape
        FOR EACH ROW EXECUTE FUNCTION world.notify_shape_update();
    """)


    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TRIGGER IF EXISTS shape_update_trigger ON world.shape;")
    op.execute("DROP FUNCTION IF EXISTS world.notify_shape_update();")
    op.execute("DROP FUNCTION IF EXISTS public.notify_shape_update();")
    op.drop_table('shape', schema='world')
    op.drop_table('model', schema='world')
    op.drop_table('line', schema='world')
    op.drop_table('light', schema='world')
    op.drop_table('figure', schema='world')
    op.drop_table('arch', schema='world')

    with op.batch_alter_table('users', schema='auth') as batch_op:
        batch_op.drop_index(batch_op.f('ix_auth_users_name'))

    op.drop_table('users', schema='auth')
    with op.batch_alter_table('role', schema='auth') as batch_op:
        batch_op.drop_index(batch_op.f('ix_auth_role_name'))

    op.drop_table('role', schema='auth')
    # ### end Alembic commands ###
